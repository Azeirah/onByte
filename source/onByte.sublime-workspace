{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"syn",
				"synchroniseRemote"
			],
			[
				"cont",
				"contactNaam"
			],
			[
				"GL_T",
				"GL_TRUE"
			],
			[
				"model",
				"modelview"
			],
			[
				"draw",
				"drawBackground"
			],
			[
				"fib",
				"fibonacci-efficient"
			],
			[
				"fi",
				"fibonacci"
			],
			[
				"ext",
				"extract-first-element"
			],
			[
				"us",
				"usingt	Using statement (templated)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/combocoptop/Documents/school/onByte/readme.md",
			"settings":
			{
				"buffer_size": 413,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/combocoptop/Documents/school/onByte/makefile",
			"settings":
			{
				"buffer_size": 753,
				"line_ending": "Unix"
			}
		},
		{
			"file": "GameObject.cpp",
			"settings":
			{
				"buffer_size": 13,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/combocoptop/Documents/school/onByte/LICENSE",
			"settings":
			{
				"buffer_size": 1075,
				"line_ending": "Unix"
			}
		},
		{
			"file": "main.cpp",
			"settings":
			{
				"buffer_size": 99,
				"line_ending": "Unix"
			}
		},
		{
			"file": "onByte.h",
			"settings":
			{
				"buffer_size": 106,
				"line_ending": "Unix"
			}
		},
		{
			"file": "GameObject.h",
			"settings":
			{
				"buffer_size": 128,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Over de gameloop en deltatijd,\n\nOp de laptop draait het spel rond de 400fps op het bordje tussen 60 en 80 ofzo\n\nWe willen gewoon zo hoog mogelijke refreshrate, maar updates moeten op elk systeem gelijk zijn...",
			"settings":
			{
				"buffer_size": 209,
				"line_ending": "Unix",
				"name": "Over de gameloop en deltatijd,"
			}
		},
		{
			"contents": "var base = {\n    genSet: function (object, prop) {\n        return function (value) {\n            object[prop] = value;\n        };\n    },\n    genGet: function (object, prop) {\n        return function () {\n            return object[prop];\n        };\n    },\n    genHas: function (object, prop) {\n        return function (value) {\n            return object[prop] === value;\n        };\n    }\n};\n\nfunction NAW (naam, adres, woonplaats) {\n    var naw = Object.create(base);\n\n    naw.naam            = naam;\n    naw.adres           = adres;\n    naw.woonplaats      = woonplaats;\n\n    naw.setNaam         = naw.genSet(\"naam\");\n    naw.getNaam         = naw.genGet(\"naam\");\n\n    naw.setAdres        = naw.genSet(\"adres\");\n    naw.getAdres        = naw.genGet(\"adres\");\n\n    naw.setWoonplaats   = naw.genSet(\"woonplaats\");\n    naw.getWoonplaats   = naw.genGet(\"woonplaats\");\n\n    naw.heeftNaam       = naw.genHas(\"naam\");\n    naw.heeftAdres      = naw.genHas(\"adres\");\n    naw.heeftWoonplaats = naw.genHas(\"woonplaats\");\n\n    return naw;\n}\n\nfunction NAWContainer () {\n    var nawContainer = Object.create(null);\n\n    nawContainer.size = 0;\n    nawContainer.storage = new Array(20);\n\n    nawContainer.add = function (nawElement) {\n        nawContainer.storage[nawContainer.size] = nawElement;\n        nawContainer.size += 1;\n        // check voor overflow maybe? :D\n    };\n\n    // vul de eerste tien vakjes\n    for (var i = 0; i < 10; i += 1) {\n        nawContainer.add(NAW(\"naam\" + i, i, \"woonplaats\" + i));\n    }\n\n    nawContainer.zoekNaam = function (naam) {\n        for (var i = 0; i < nawContainer.size; i += 1) {\n            if (nawContainer.storage[i].naam === naam) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    nawContainer.zoekAdres = function (adres) {\n        for (var i = 0; i < nawContainer.size; i += 1) {\n            if (nawContainer.storage[i].adres === adres) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    nawContainer.verwijderViaAdres = function (adres) {\n        var idx = nawContainer.zoekAdres(adres);\n        if (idx !== -1) {\n            // swap last array item to the deleted one\n            size -= 1;\n            nawContainer.storage[idx] = nawContainer[size];\n        }\n    };\n\n    return nawContainer;\n};\n\nvar c = NAWContainer();\nconsole.log(c.zoekNaam(\"naam1\"));\nconsole.log(c.zoekNaam(\"FUCKER\"));",
			"settings":
			{
				"buffer_size": 2392,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "def ternarySearch(f, left, right, absolutePrecision):\n    if abs(right - left) < absolutePrecision:\n        return (left + right) / 2\n \n    leftThird = (2 * left + right) / 3\n    rightThird = (left + 2 * right) / 3\n \n    if f(leftThird) < f(rightThird):\n        return ternarySearch(f, leftThird, right, absolutePrecision)\n    else:\n        return ternarySearch(f, left, rightThird, absolutePrecision)\n\ndef binarySearch(A, key, imin, imax):\n    if (imax < imin):\n        return KEY_NOT_FOUND\n    else:\n        imid = midpoint(imin, imax)\n   \n        if (A[imid] > key):\n            return binary_search(A, key, imin, imid - 1)\n        else if (A[imid] < key):\n            return binary_search(A, key, imid + 1, imax)\n        else:\n            return imid\n",
			"settings":
			{
				"buffer_size": 755,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/combocoptop/Documents/martijnbrekelmans/Object.remote/clients/simple.html",
			"settings":
			{
				"buffer_size": 1010,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "> var base = {\n    genSet: function (object, prop) {\n        return function (value) {\n            object[prop] = value;\n        };\n    }\n\n    genGet: function (object, prop) {\n        return function () {\n            return object[prop];\n        };\n    }\n\n    genHas: function (object, prop) {\n        return function (value) {\n            return object[prop] === value;\n        };\n    }\n};\n\nfunction NAW (naam, adres, woonplaats) {\n    var naw = Object.create(base);\n\n    naw.naam            = naam;\n    naw.adres           = adres;\n    naw.woonplaats      = woonplaats;\n\n    naw.setNaam         = naw.genSet(\"naam\");\n    naw.getNaam         = naw.getGet(\"naam\");\n\n    naw.setAdres        = naw.genSet(\"adres\");\n    naw.getAdres        = naw.getGet(\"adres\");\n\n    naw.setWoonplaats   = naw.genSet(\"woonplaats\");\n    naw.getWoonplaats   = naw.getGet(\"woonplaats\");\n\n    naw.heeftNaam       = naw.genHas(\"naam\");\n    naw.heeftAdres      = naw.genHas(\"adres\");\n    naw.heeftWoonplaats = naw.genHas(\"woonplaats\");\n\n    return naw;\n}\n\n\n/*\nSchrijf een methode die zoekt op:\n\nnaam: als de naam gevonden is, geeft de methode de index terug waar \nde naam te vinden is. Als de naam \nniet\ngevonden is,\nwordt \n-\n1 \nteruggegeven. De methode zoekt niet langer als ie een oplossing \ngevonden heeft.\n\nadres. Zorg dat deze op analoge wijze werkt als vorige methode.\n\nwoonplaats. Zorg dat deze op analoge wijze werkt als de eerste \nmethode.\n\nadres \nen\nwoonplaats. Zorg d\nat deze op analoge wijze werkt als de \neerste methode\n */\n\nfunction genZoek (predicate) {\n    return function (obj) {\n        for (var i = 0; i < this.size; i += 1) {\n            if (predicate.call(this)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nfunction NAWContainer () {\n    var nawContainer = Object.create(null);\n\n    nawContainer.size = 0;\n\n    // private\n    var array = new Array(20);\n\n    nawContainer.add = function (nawElement) {\n        array[size] = nawElement;\n        nawContainer.size += 1;\n        // check voor overflow maybe? :D\n    };\n\n    // vul de eerste tien vakjes\n    for (var i = 0; i < 10; i += 1) {\n        nawContainer.add(NAW(\"naam\" + i, i, \"woonplaats\" + i));\n    }\n\n    naw.zoekNaam              = genZoek(nawContainer);\n    naw.zoekAdres             = genZoek(nawContainer);\n    naw.zoekAdresEnWoonplaats = genZoek(nawContainer);\n};\n... ..... ....... ....... ..... ... ... ... ..... ..... ... ... ... ... ..... ..... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..... ....... ......... ......... ....... ..... ..... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... \n... ",
			"settings":
			{
				"buffer_size": 2827,
				"line_ending": "Unix",
				"name": "*REPL* [js]",
				"scratch": true
			}
		},
		{
			"file": "Vector.cpp",
			"settings":
			{
				"buffer_size": 112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/combocoptop/Documents/school/onByte/make.sublime-build",
			"settings":
			{
				"buffer_size": 81,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Vector.h",
			"settings":
			{
				"buffer_size": 134,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/make.sublime-build",
	"command_palette":
	{
		"height": 350.0,
		"selected_items":
		[
			[
				"py",
				"Set Syntax: Python"
			],
			[
				"node",
				"SublimeREPL: Node"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pyto",
				"Set Syntax: Python"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"c",
				"Set Syntax: C"
			],
			[
				"form",
				"Clang Format: Select Style"
			],
			[
				"fromat",
				"Clang Format: Select Style"
			],
			[
				"createb",
				"Origami: Create Pane Below"
			],
			[
				"formatjs",
				"Format: Javascript"
			],
			[
				"forma",
				"Format: Javascript"
			],
			[
				"formajs",
				"Format: Javascript"
			],
			[
				"wrap",
				"Emmet: Wrap With Abbreviation"
			],
			[
				"pyt",
				"Set Syntax: Python"
			],
			[
				"syntaxc",
				"Set Syntax: C"
			],
			[
				"creap",
				"Origami: Create Pane Below"
			],
			[
				"creat",
				"Origami: Create Pane Below"
			],
			[
				"createpanb",
				"Origami: Create Pane Below"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings – User"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"jd",
				"Set Syntax: JavaDoc"
			],
			[
				"clisp",
				"SublimeREPL: Clisp"
			],
			[
				"cli",
				"SublimeREPL: Clisp"
			],
			[
				"otol",
				"Origami: Move File to Pane on the Left"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"ftpor",
				"Origami: Move File to Pane on the Right"
			],
			[
				"origame to panlef",
				"Origami: Move File to Pane on the Left"
			],
			[
				"lisp",
				"SublimeREPL: Clisp"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"vhdl",
				"Set Syntax: VHDL"
			],
			[
				"cpp",
				"Package Control: Upgrade Package"
			],
			[
				"origbel",
				"Origami: Create Pane Below"
			],
			[
				"origami",
				"Origami: Create Pane Below"
			],
			[
				"l",
				"Sort Lines"
			],
			[
				"repl",
				"SublimeREPL: Clisp"
			]
		],
		"width": 534.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/combocoptop/Documents/school/onByte",
		"/home/combocoptop/Documents/school/onByte/source"
	],
	"file_history":
	[
		"/home/combocoptop/.config/sublime-text-3/Packages/User/make.sublime-build",
		"/home/combocoptop/Documents/school/onByte/source/main.c",
		"/home/combocoptop/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/combocoptop/Documents/bashscript/toggler.sh",
		"/home/combocoptop/Documents/school/onByte/makefile",
		"/home/combocoptop/Documents/bashscript/screenNames.sh",
		"/home/combocoptop/Documents/bashscript/getScreenNames.c",
		"/home/combocoptop/Documents/bashscript/switchScreen.py",
		"/home/combocoptop/Documents/martijnbrekelmans/Object.remote/clients/simple.html",
		"/home/combocoptop/Documents/martijnbrekelmans/lib/drawing.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/cdn/drawingCollection.js",
		"/home/combocoptop/Downloads/sepples/wasmachine/Centrifuge.cpp",
		"/home/combocoptop/Documents/martijnbrekelmans/Object.remote/remotes/basic/js/remote.js",
		"/home/combocoptop/Documents/school/3dpongstyleguide.md",
		"/home/combocoptop/Documents/martijnbrekelmans/Object.remote/remoteObjectServer.js",
		"/home/combocoptop/Documents/martijnbrekelmans/lib/drawingCollection.js",
		"/home/combocoptop/Documents/martijnbrekelmans/Object.remote/remotes/basic/js/objectManipulator.js",
		"/home/combocoptop/Documents/school/3dpong/src/pong.h",
		"/home/combocoptop/Documents/martijnbrekelmans/quotes.html",
		"/home/combocoptop/Documents/research/turing-award-winners.txt",
		"/home/combocoptop/Documents/c/ooc/set/bag.c",
		"/home/combocoptop/Documents/c/ooc/set/example.c",
		"/home/combocoptop/Documents/c/ooc/bag.c",
		"/home/combocoptop/Documents/c/ooc/set.c",
		"/home/combocoptop/Documents/c/ooc/example.c",
		"/home/combocoptop/Documents/c/ooc/set.h",
		"/home/combocoptop/Documents/c/ooc/bag.h",
		"/home/combocoptop/Documents/school/3dpong/src/main.c",
		"/home/combocoptop/Documents/school/3dpong/Common/esUtil.c",
		"/home/combocoptop/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/combocoptop/.config/sublime-text-3/Packages/User/insert-semicolon.sublime-macro",
		"/home/combocoptop/Documents/c/ooc/new.h",
		"/home/combocoptop/Documents/c/ooc/object.h",
		"/home/combocoptop/Documents/school/3dpong2/Common/esUtil.c",
		"/home/combocoptop/Documents/school/sepples/w2/Mobiel.cpp",
		"/home/combocoptop/Documents/school/sepples/w2/Sms.h",
		"/home/combocoptop/Documents/school/sepples/w2/Provider.h",
		"/home/combocoptop/Documents/school/sepples/w2/Mobiel.h",
		"/home/combocoptop/Documents/school/sepples/w2/Sms.cpp",
		"/home/combocoptop/Documents/school/sepples/w2/main.cpp",
		"/home/combocoptop/Documents/school/sepples/w2/base.h",
		"/home/combocoptop/Documents/school/sepples/examples/templates/stackTemplate.h",
		"/home/combocoptop/Downloads/sepples/w4/stack/stack.cpp",
		"/home/combocoptop/Downloads/sepples/w4/stack/stack_ok.cpp",
		"/home/combocoptop/Documents/school/sepples/examples/templates/stackTemplate.cpp",
		"/home/combocoptop/Documents/school/sepples/w2/Provider.cpp",
		"/home/combocoptop/Downloads/sepples/w4/stack/main.cpp",
		"/home/combocoptop/Documents/school/sepples/examples/aids/aids.cpp",
		"/home/combocoptop/Documents/school/sepples/examples/maps/maps.cpp",
		"/home/combocoptop/Documents/school/sepples/examples/objectPassing.cpp",
		"/home/combocoptop/Documents/martijnbrekelmans/Object.remote/objectRemote.js",
		"/home/combocoptop/Documents/leethack.js",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/build_all.sh",
		"/home/combocoptop/Documents/school/3dpong/project/buildandrun.sh",
		"/home/combocoptop/Documents/martijnbrekelmans/products.php",
		"/home/combocoptop/Documents/martijnbrekelmans/phone.html",
		"/home/combocoptop/Documents/school/3dpong2/SceneModel.cpp",
		"/home/combocoptop/Documents/martijnbrekelmans/stackflowover.html",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/morphology.c",
		"/home/combocoptop/Documents/school/3dpong2/Makefile",
		"/home/combocoptop/Documents/school/sepples/.makefile",
		"/home/combocoptop/Documents/martijnbrekelmans/web2.0/style.css",
		"/home/combocoptop/Documents/martijnbrekelmans/web2.0/index.html",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/JSXTransformer.js",
		"/home/combocoptop/Documents/school/3dpong2/src/main.c",
		"/home/combocoptop/Documents/martijnbrekelmans/describe/notes/index.html",
		"/home/combocoptop/Documents/martijnbrekelmans/web2.0/game.webm",
		"/home/combocoptop/Documents/martijnbrekelmans/web2.0/color-microbes.webm",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/src/main.c",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/Common/esShapes.c",
		"/home/combocoptop/Documents/martijnbrekelmans/game/game.js",
		"/home/combocoptop/Downloads/bcd.vhd",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn/cdn/drawing.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn/dropzone.css",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn/delete.php",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn/minicdn.css",
		"/home/combocoptop/Documents/martijnbrekelmans/drawing/minimap.css",
		"/home/combocoptop/Documents/school/sepples/makefile",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/.module-cache/21037fae18601f988e7250d112ece25db70d1a03.js",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/example_cmake/CMakeFiles/2.8.12.2/CMakeCCompiler.cmake",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/.module-cache/0cd69bdb8cc76f26cb3d0675493f18e3ee16aab5.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/.module-cache/048afa150278c99a0e0075a3753e7df1244c27a8.js",
		"/home/combocoptop/Documents/martijnbrekelmans/drawing/main.css",
		"/home/combocoptop/Documents/martijnbrekelmans/drawing/mouseDrag.js",
		"/home/combocoptop/Documents/martijnbrekelmans/demos.php",
		"/home/combocoptop/Documents/martijnbrekelmans/SMG/groovemarklet-app.min.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/cdn/datgui.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn/getCdnFiles.php",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/.module-cache/ed6eff7c24c02db76ee8b5a49ae3b81cfd46aabf.js",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/cdn/GpsExportVolledigW556_01-02-2015.csv",
		"/home/combocoptop/Documents/martijnbrekelmans/microbes/microbes.js",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/src/pong.h",
		"/home/combocoptop/Downloads/infile.csv",
		"/home/combocoptop/Documents/martijnbrekelmans/describe/microbes/index.html",
		"/home/combocoptop/Documents/martijnbrekelmans/describe/game/index.html",
		"/home/combocoptop/Documents/martijnbrekelmans/remoteObjectServer/server/node_modules/ws/lib/WebSocket.js",
		"/home/combocoptop/Documents/school/sepples/w5/Werknemer.cpp",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/waveform.data",
		"/home/combocoptop/Downloads/reddendeengel.py",
		"/home/combocoptop/Downloads/inFile.csv",
		"/home/combocoptop/Downloads/outfile.csv",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/Common/esShader.c",
		"/home/combocoptop/Documents/martijnbrekelmans/experiment/experiment.js",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/main.c",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/src/field.vs",
		"/home/combocoptop/Documents/school/3dpong2/OOPAttempt/src/ball.fs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/field.vs",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/fback_c.c",
		"/home/combocoptop/Documents/followLed/main.cpp",
		"/home/combocoptop/Documents/followLed/main.c",
		"/home/combocoptop/Documents/opencv-2.4.11/samples/c/cat.xml",
		"/home/combocoptop/Documents/martijnbrekelmans/lib/37aad353-d942-422b-b171-b9c7706d913c.dmp",
		"/home/combocoptop/Documents/martijnbrekelmans/minicdn2.0/build/.module-cache/3a0f48697cc05481fe5953ebc9d80f4922157f17.js",
		"/home/combocoptop/Documents/school/sepples/main.cpp",
		"/home/combocoptop/Documents/martijnbrekelmans/remoteObjectServer/objectRemote.js",
		"/home/combocoptop/Documents/martijnbrekelmans/remoteObjectServer/server/node_modules/ws/node_modules/options/lib/options.js",
		"/home/combocoptop/Documents/martijnbrekelmans/remoteObjectServer/server/node_modules/ws/lib/PerMessageDeflate.js",
		"/home/combocoptop/Documents/martijnbrekelmans/remoteObjectServer/server/node_modules/ws/node_modules/options/package.json",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/ball.vs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/pong.h",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/ball.fs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/bat.vs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/bat.fs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/field.fs",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/Common/esUtil.h",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/Common/esUtil.c",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/Common/esShapes.c",
		"/home/combocoptop/Documents/school/3dpong/OOPAttempt/src/ball.VS"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 94.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"createObject",
			"#",
			"# ",
			";",
			"//",
			"int",
			"Object.create",
			"nawContainer[",
			"nawContainer[i",
			"nawContainer[",
			"newC",
			"naam",
			"naw.",
			"naw",
			"nawContainer",
			"naw",
			"nawContainer",
			"naw",
			"size",
			"getGet",
			"size",
			"naw",
			"naw,",
			"genHas",
			"function",
			"a",
			"naam",
			"Naam",
			"naam",
			"Naam",
			"setNaam",
			"value",
			"this",
			"result_line_regex",
			"x",
			";\n",
			"--icon=dialog-information'",
			"screen1",
			"screen",
			"stylus",
			"0",
			"syste",
			"drie",
			"namespace",
			"remote",
			"newValue",
			"false",
			", ",
			"createRemoteObject",
			"clients",
			"\"object\", ",
			"remote",
			"sendMessage",
			"channel",
			"ch",
			"starting",
			"handleNewConnection",
			"idGenerator",
			"[namespace]",
			"client",
			"assert",
			"createRemoteObject",
			"createRemoteObject(",
			"createRemoteObject",
			"name",
			"in",
			"8080",
			"sendJSON",
			"decodeMessage",
			"name",
			"namesp",
			"pList",
			"assertionco",
			"assertion",
			"objectContainer[namespace][",
			"objectContainer[namespace]",
			"creationListener",
			"createRemoteObject",
			"\n                        ",
			"[objectNamespace]",
			"complexite",
			"complexiteitstheorie",
			"void",
			"element",
			"set",
			"@1",
			"SET_H",
			"updateFunc",
			"stack_array",
			"stack_pointer",
			"T",
			"Template",
			"toPush",
			"contactLijst",
			"\";",
			"ingstr",
			"const",
			"nr",
			"void",
			"employee\": \"true",
			"\"employee\": \"true\",",
			"Kailuhu",
			"days",
			"number_of_days",
			"thomasId",
			"phoneNumbers\": null",
			"Brian Ermans",
			"_name",
			"_collection\":",
			"\"_transform\":",
			"40",
			"videos[i]",
			"done",
			"<br>",
			"moveBall",
			"esRegisterKeyFunc",
			"keyFunc",
			"ballXVector",
			"\n",
			";",
			":",
			"' ",
			"p",
			"fout",
			",",
			"0",
			"ball",
			"bat->"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/combocoptop/Documents/school/onByte/readme.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 413,
						"regions":
						{
						},
						"selection":
						[
							[
								395,
								395
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/combocoptop/Documents/school/onByte/makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 753,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "GameObject.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/combocoptop/Documents/school/onByte/LICENSE",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1075,
						"regions":
						{
						},
						"selection":
						[
							[
								799,
								799
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99,
						"regions":
						{
						},
						"selection":
						[
							[
								99,
								99
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "onByte.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 106,
						"regions":
						{
						},
						"selection":
						[
							[
								63,
								63
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "GameObject.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 128,
						"regions":
						{
						},
						"selection":
						[
							[
								128,
								128
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 209,
						"regions":
						{
						},
						"selection":
						[
							[
								209,
								209
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "Over de gameloop en deltatijd,",
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2392,
						"regions":
						{
							"mark":
							{
								"flags": 144,
								"icon": "dot",
								"regions":
								[
									[
										2170,
										2170
									]
								],
								"scope": "mark"
							}
						},
						"selection":
						[
							[
								2250,
								2250
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 920.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 755,
						"regions":
						{
						},
						"selection":
						[
							[
								401,
								401
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/home/combocoptop/Documents/martijnbrekelmans/Object.remote/clients/simple.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1010,
						"regions":
						{
						},
						"selection":
						[
							[
								649,
								649
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2827,
						"regions":
						{
						},
						"selection":
						[
							[
								2827,
								2827
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": true,
							"auto_indent": false,
							"bh_regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"detect_indentation": false,
							"gutter": false,
							"history_arrows": true,
							"incomplete_sync": null,
							"indent_subsequent_lines": false,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "js",
							"repl_id": "d66211d34cff490d84832dc50cdc5ffa",
							"repl_restart_args":
							{
								"autocomplete_server": true,
								"cmd":
								{
									"linux":
									[
										"node",
										"${packages}/SublimeREPL/config/NodeJS/repl.js"
									],
									"osx":
									[
										"node",
										"${packages}/SublimeREPL/config/NodeJS/repl.js"
									],
									"windows":
									[
										"node.exe",
										"${packages}/SublimeREPL/config/NodeJS/repl.js"
									]
								},
								"cwd": "$file_path",
								"encoding": "utf8",
								"extend_env":
								{
									"NODE_NO_READLINE": 1
								},
								"external_id": "js",
								"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1337.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "Vector.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/home/combocoptop/Documents/school/onByte/make.sublime-build",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "Vector.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 134,
						"regions":
						{
							"mark":
							{
								"flags": 144,
								"icon": "dot",
								"regions":
								[
									[
										130,
										130
									]
								],
								"scope": "mark"
							}
						},
						"selection":
						[
							[
								128,
								128
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"incomplete_sync": null,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CppYCM.2":
	{
		"height": 0.0
	},
	"output.CppYCM.3":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 104.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 116.0
	},
	"project": "onByte.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"gaocp",
				"source/GameObject.cpp"
			],
			[
				"gamobh",
				"source/GameObject.h"
			],
			[
				"drawingcoll",
				"martijnbrekelmans/minicdn2.0/cdn/drawingCollection.js"
			],
			[
				"drawingcollection",
				"martijnbrekelmans/minicdn2.0/cdn/drawingCollection.js"
			],
			[
				"provic",
				"sepples/w2/Provider.cpp"
			],
			[
				"pro",
				"sepples/w2/Provider.h"
			],
			[
				"base.h",
				"sepples/w2/base.h"
			],
			[
				"provd",
				"sepples/w2/Provider.h"
			],
			[
				"sms.h",
				"sepples/w2/Sms.h"
			],
			[
				"mobiel.h",
				"sepples/w2/Mobiel.h"
			],
			[
				"js",
				"martijnbrekelmans/minicdn2.0/build/JSXTransformer.js"
			],
			[
				"quotes",
				"martijnbrekelmans/quotes.html"
			],
			[
				"web20",
				"martijnbrekelmans/web2.0/index.html"
			],
			[
				"minicdndrawingcol",
				"martijnbrekelmans/minicdn2.0/cdn/drawingCollection.js"
			],
			[
				"game",
				"martijnbrekelmans/game/game.js"
			],
			[
				"miniccdndrawingc",
				"martijnbrekelmans/minicdn2.0/cdn/drawingCollection.js"
			],
			[
				"web2.0",
				"martijnbrekelmans/web2.0/index.html"
			],
			[
				"esshapes",
				"3dpong2/OOPAttempt/Common/esShapes.c"
			],
			[
				"3dpong",
				"~/Documents/school/3dpong/OOPAttempt/src/main.c"
			],
			[
				"esutil.h",
				"martijnbrekelmans/remoteObjectServer/server/node_modules/ws/node_modules/utf-8-validate/node_modules/nan/nan_implementation_12_inl.h"
			],
			[
				"esuti.",
				"~/Documents/school/3dpong/OOPAttempt/Common/esUtil.c"
			],
			[
				"bal",
				"~/Documents/school/3dpong/OOPAttempt/src/Ball.cpp"
			],
			[
				"week2vhd",
				"HWweek2/week2.vhd"
			],
			[
				"vhd",
				"HWweek2/sevenSegmentDecoder.vhd"
			],
			[
				".vhd",
				"week5_geluid/PWM.vhd"
			],
			[
				"top.vhd",
				"week5_geluid/top.vhd"
			],
			[
				"top",
				"~/Documents/school/xilinx/Week3/top.vhd"
			],
			[
				"lisp",
				"LISP booky/Lisp.lisp"
			],
			[
				"smsh",
				"~/Documents/school/sepples/Sms.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Documents/school/3d engine test/3dengine.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 180.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
